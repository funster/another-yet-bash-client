apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    flatDir {
        dirs 'libs'
    }
}

ext {
    supportLibVersion = '24.2.1'
    rxVersion = '1.2.1'
    okHttpVersion = '3.4.1'
}

dependencies {
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"

    compile "org.jsoup:jsoup:1.7.3"
    compile "io.reactivex:rxandroid:$rxVersion"

    compile 'org.simplepresenter:lib-release:0.1@aar'

    testCompile 'junit:junit:4.12'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"

}

def getReleaseKeyStore() { file(System.properties['user.home'] + "/.android/alpha.keystore") }

def isReleaseKeyStoreExists() { getReleaseKeyStore().exists() }

android {
    compileSdkVersion 24
    buildToolsVersion '23.0.3'

    defaultConfig {
        versionCode 28
        versionName '2.0'
        minSdkVersion 15
        targetSdkVersion 24
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile getReleaseKeyStore()
            storePassword 'uthvbjyf'
            keyAlias 'defaultkey'
            keyPassword 'uthvbjyf'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFile 'proguard.cfg'
            if (isReleaseKeyStoreExists())
                signingConfig android.signingConfigs.release
            else
                signingConfig android.signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'kotlin/kotlin.kotlin_builtins'
        exclude 'kotlin/annotation/annotation.kotlin_builtins'
        exclude 'kotlin/collections/collections.kotlin_builtins'
        exclude 'kotlin/internal/internal.kotlin_builtins'
        exclude 'kotlin/ranges/ranges.kotlin_builtins'
        exclude 'kotlin/reflect/reflect.kotlin_builtins'
    }

    lintOptions {
        quiet true
        abortOnError false
        checkReleaseBuilds true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

buildscript {
    ext.kotlin_version = '1.0.3'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    };
}