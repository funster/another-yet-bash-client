apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    // support
    compile "com.android.support:support-v4:22.1.1"
    compile "com.android.support:appcompat-v7:22.1.1"
    compile "com.android.support:support-annotations:22.1.1"
    compile 'com.annimon:stream:1.0.1'

    // ui
    compile "com.daimajia.swipelayout:library:1.1.9@aar"

    // net
    compile 'com.octo.android.robospice:robospice-okhttp:1.4.14'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile "org.jsoup:jsoup:1.7.3"

    // di
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
}

def getReleaseKeyStore() { file(System.properties['user.home'] + "/.android/alpha.keystore") }

def isReleaseKeyStoreExists() { getReleaseKeyStore().exists() }

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        versionCode 28
        versionName '2.0'
        minSdkVersion 15
        targetSdkVersion 22
    }

    signingConfigs {
        release {
            storeFile getReleaseKeyStore()
            storePassword 'uthvbjyf'
            keyAlias 'defaultkey'
            keyPassword 'uthvbjyf'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFile 'proguard.cfg'
            if (isReleaseKeyStoreExists())
                signingConfig android.signingConfigs.release
            else
                signingConfig android.signingConfigs.debug
        }
    }

    lintOptions {
        quiet true
        abortOnError false
        checkReleaseBuilds true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_6
}

